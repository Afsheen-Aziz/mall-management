import tkinter as tk
from tkinter import messagebox

class TicTacToe:
    def __init__(self, root):
        self.root = root
        self.root.title("Tic Tac Toe")
        self.turn = "X"  # Player X starts
        self.board = [""] * 9  # Empty board with 9 positions
        self.buttons = []
        
        # Create the 3x3 grid of buttons
        for i in range(9):
            button = tk.Button(self.root, text="", font=("Arial", 24), width=5, height=2,
                               command=lambda i=i: self.make_move(i))
            button.grid(row=i//3, column=i%3)
            self.buttons.append(button)
    
    def make_move(self, i):
        if self.board[i] == "" and not self.check_winner() and not self.check_tie():
            self.board[i] = self.turn
            self.buttons[i].config(text=self.turn)
            if self.check_winner():
                self.show_winner()
            elif self.check_tie():
                self.show_tie()
            else:
                self.turn = "O" if self.turn == "X" else "X"

    def check_winner(self):
        win_conditions = [(0, 1, 2), (3, 4, 5), (6, 7, 8),  # Horizontal
                          (0, 3, 6), (1, 4, 7), (2, 5, 8),  # Vertical
                          (0, 4, 8), (2, 4, 6)]  # Diagonal
        for condition in win_conditions:
            if self.board[condition[0]] == self.board[condition[1]] == self.board[condition[2]] != "":
                return True
        return False

    def check_tie(self):
        return "" not in self.board  # If no empty space left, it's a tie

    def show_winner(self):
        winner = self.turn
        messagebox.showinfo("Game Over", f"Player {winner} wins!")
        self.reset_game()

    def show_tie(self):
        messagebox.showinfo("Game Over", "It's a tie!")
        self.reset_game()

    def reset_game(self):
        self.board = [""] * 9
        for button in self.buttons:
            button.config(text="")
        self.turn = "X"

if __name__ == "__main__":
    root = tk.Tk()
    game = TicTacToe(root)
    root.mainloop()
